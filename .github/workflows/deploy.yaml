name: "Deploy Service"

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag for deploy"
        required: true
        type: string

jobs:
  deployment:
    runs-on: ubuntu-latest
    env:
      HOST: "${{ secrets.USER }}@${{ secrets.HOST }}"
      DEPLOY_DIRECTORY: "/${{ secrets.USER }}/apps/auth"
      CONFIG_PATH: "/${{ secrets.USER }}/apps/auth/config/prod.yaml"

    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.tag }}

      - name: "Check if tag exists"
        run: |
          git fetch --all --tags
          if ! git tag | grep -q "^${{ github.event.inputs.tag }}$"; then
            echo "error: tag '${{ github.event.inputs.tag }}' not found"
            exit 1
          fi

      - name: "Set up Go"
        uses: actions/setup-go@v4
        with:
          go-version: "1.21.5"

      - name: "Build app"
        run: |
          go mod download
          go build -o auth ./cmd/auth-server

      - name: "Deploy to VM"
        env:
          DEPLOY_SSH_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
        run: |
          sudo apt-get install -y ssh rsync
          echo "$DEPLOY_SSH_KEY" > deploy_key.pem
          chmod 600 deploy_key.pem
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ env.HOST }} "mkdir -p ${{ env.DEPLOY_DIRECTORY }}"
          rsync -avz -e 'ssh -i deploy_key.pem -o StrictHostKeyChecking=no' --exclude='.git' ./ ${{ env.HOST }}:${{ env.DEPLOY_DIRECTORY }} 
      
      - name: "Copy JWT keys to VM"
        env:
          JWT_PRIVATE_KEY: ${{ secrets.JWT_PRIVATE_KEY }}
          JWT_PUBLIC_KEY: ${{ secrets.JWT_PUBLIC_KEY }}
        run: |
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ env.HOST }} "mkdir -p ${{ env.DEPLOY_DIRECTORY }}/keys"
          echo "$JWT_PRIVATE_KEY" | ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ env.HOST }} "cat > ${{ env.DEPLOY_DIRECTORY }}/keys/private.pem"
          echo "$JWT_PUBLIC_KEY" | ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ env.HOST }} "cat > ${{ env.DEPLOY_DIRECTORY }}/keys/public.pem"

      - name: "Remove old systemd service file"
        run: |
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ env.HOST }} "rm -f /etc/systemd/system/auth.service"
      
      - name: "List workspace contents"
        run: |
          echo "Listing deployment folder contents:"
          ls -la ${{ github.workspace }}/deployment
      
      - name: "Copy systemd service file"
        run: |
          scp -i deploy_key.pem -o StrictHostKeyChecking=no ${{ github.workspace }}/deployment/auth.service ${{ env.HOST }}:/tmp/auth.service
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ env.HOST }} "mv /tmp/auth.service /etc/systemd/system/auth.service"
      
      - name: "Start application"
        run: |
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ env.HOST }} "systemctl daemon-reload && systemctl restart auth.service"
